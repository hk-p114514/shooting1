/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/class/Bit.ts":
/*!**************************!*\
  !*** ./src/class/Bit.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Bit\": () => (/* binding */ Bit)\n/* harmony export */ });\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Point */ \"./src/class/Point.ts\");\n\nvar Bit = /** @class */ (function () {\n    function Bit() {\n        this.position = new _Point__WEBPACK_IMPORTED_MODULE_0__.Point();\n        this.parent = null;\n        this.size = 0;\n        this.life = 0;\n        this.param = 0;\n        this.alive = false;\n    }\n    Bit.prototype.BitSet = function (parent, size, life, param) {\n        // 母体となるボスをセット\n        this.parent = parent;\n        // サイズと体力（耐久値）を設定\n        this.size = size;\n        this.life = life;\n        // パラメータをセット\n        this.param = param;\n        // 出現させる（生死フラグを立てる）\n        this.alive = true;\n    };\n    Bit.prototype.BitMove = function () {\n        var i, x, y;\n        this.param++;\n        i = ((this.param % 360) * Math.PI) / 180;\n        if (this.parent) {\n            x = Math.cos(i) * (this.parent.size + this.size);\n            y = Math.sin(i) * (this.parent.size + this.size);\n            this.position.x = this.parent.position.x + x;\n            this.position.y = this.parent.position.y + y;\n        }\n    };\n    return Bit;\n}());\n\n\n\n//# sourceURL=webpack://module_shooting/./src/class/Bit.ts?");

/***/ }),

/***/ "./src/class/Boss.ts":
/*!***************************!*\
  !*** ./src/class/Boss.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Boss\": () => (/* binding */ Boss)\n/* harmony export */ });\n/* harmony import */ var _init_variable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../init/variable */ \"./src/init/variable.ts\");\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Point */ \"./src/class/Point.ts\");\n\n\nvar Boss = /** @class */ (function () {\n    function Boss() {\n        this.position = new _Point__WEBPACK_IMPORTED_MODULE_1__.Point();\n        this.size = 0;\n        this.life = 0;\n        this.param = 0;\n        this.alive = false;\n    }\n    Boss.prototype.BossSet = function (p, size, life) {\n        // 座標を設定\n        this.position.x = p.x;\n        this.position.y = p.y;\n        // サイズ、体力（耐久値）を設定\n        this.size = size;\n        this.life = life;\n        // パラメータのリセット\n        this.param = 0;\n        // 出現させる（　生死フラグを　立てる　）\n        this.alive = true;\n    };\n    Boss.prototype.BossMove = function () {\n        var i, j;\n        // パラメータのインクリメント\n        this.param++;\n        // パラメータに応じて分岐処理\n        switch (true) {\n            case this.param < 100:\n                // 下方向へまっすぐすすむ\n                this.position.y += 1.5;\n                break;\n            default:\n                // パラメータからラジアンを求める\n                i = (((this.param - 100) % 360) * Math.PI) / 180;\n                // ラジアンから横移動量を測定\n                j = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width / 2;\n                this.position.x = j + Math.sin(i) * j;\n                break;\n        }\n    };\n    return Boss;\n}());\n\n\n\n//# sourceURL=webpack://module_shooting/./src/class/Boss.ts?");

/***/ }),

/***/ "./src/class/Character.ts":
/*!********************************!*\
  !*** ./src/class/Character.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Character\": () => (/* binding */ Character)\n/* harmony export */ });\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Point */ \"./src/class/Point.ts\");\n\n// キャラクター自身の設定\nvar Character = /** @class */ (function () {\n    function Character() {\n        this.position = new _Point__WEBPACK_IMPORTED_MODULE_0__.Point();\n        this.size = 0;\n    }\n    Character.prototype.init = function (size) {\n        this.size = size;\n    };\n    return Character;\n}());\n\n\n\n//# sourceURL=webpack://module_shooting/./src/class/Character.ts?");

/***/ }),

/***/ "./src/class/CharacterShot.ts":
/*!************************************!*\
  !*** ./src/class/CharacterShot.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CharacterShot\": () => (/* binding */ CharacterShot)\n/* harmony export */ });\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Point */ \"./src/class/Point.ts\");\n\n// 弾幕の設定\nvar CharacterShot = /** @class */ (function () {\n    function CharacterShot() {\n        this.position = new _Point__WEBPACK_IMPORTED_MODULE_0__.Point();\n        this.size = 0;\n        this.speed = 0;\n        this.alive = false;\n    }\n    CharacterShot.prototype.CharacterShotSet = function (p, size, speed) {\n        this.position.x = p.x;\n        this.position.y = p.y;\n        this.size = size;\n        this.speed = speed;\n        this.alive = true;\n    };\n    CharacterShot.prototype.CharacterShotMove = function () {\n        this.position.y -= this.speed;\n        if (this.position.y < -this.size)\n            this.alive = false;\n    };\n    return CharacterShot;\n}());\n\n\n\n//# sourceURL=webpack://module_shooting/./src/class/CharacterShot.ts?");

/***/ }),

/***/ "./src/class/Enemy.ts":
/*!****************************!*\
  !*** ./src/class/Enemy.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Enemy\": () => (/* binding */ Enemy)\n/* harmony export */ });\n/* harmony import */ var _init_variable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../init/variable */ \"./src/init/variable.ts\");\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Point */ \"./src/class/Point.ts\");\n\n\nvar Enemy = /** @class */ (function () {\n    function Enemy() {\n        this.position = new _Point__WEBPACK_IMPORTED_MODULE_1__.Point();\n        this.size = 0;\n        this.type = 0;\n        this.param = 0;\n        this.alive = false;\n    }\n    Enemy.prototype.EnemySet = function (p, size, type) {\n        this.position.x = p.x;\n        this.position.y = p.y;\n        // サイズ、タイプを設定\n        this.size = size;\n        this.type = type;\n        // パラメータをリセット\n        this.param = 0;\n        // 生死判定\n        this.alive = true;\n    };\n    Enemy.prototype.EnemyMove = function () {\n        // パラメータをインクリメント\n        this.param++;\n        switch (this.type) {\n            case 1:\n                // X 方向へまっすぐ進む\n                this.position.x -= 2;\n                this.position.y -= 2;\n                // スクリーンの左端より奥に到達したら生存フラグを降ろす\n                if (this.position.x > _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width + this.size) {\n                    this.alive = false;\n                }\n                break;\n            case 2:\n                // マイナス X 方向へまっすぐ進む\n                this.position.x += 2;\n                this.position.y += 2;\n                // スクリーンの左端より奥に到達したら生存フラグを降ろす\n                if (this.position.x < -this.size) {\n                    this.alive = false;\n                }\n                break;\n            case 3:\n                this.position.x -= 2;\n                this.position.y += 2;\n                if (this.position.x > _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width + this.size) {\n                    this.alive = false;\n                }\n                break;\n            case 4:\n                this.position.x += 2;\n                this.position.y -= 2;\n                if (this.position.x < -this.size) {\n                    this.alive = false;\n                }\n                break;\n            case 5:\n                this.position.x += 2;\n                if (this.position.x > _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width + this.size) {\n                    this.alive = false;\n                }\n                break;\n            case 6:\n                this.position.x -= 2;\n                if (this.position.x < -this.size) {\n                    this.alive = false;\n                }\n                break;\n        }\n    };\n    return Enemy;\n}());\n\n\n\n//# sourceURL=webpack://module_shooting/./src/class/Enemy.ts?");

/***/ }),

/***/ "./src/class/EnemyShot.ts":
/*!********************************!*\
  !*** ./src/class/EnemyShot.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EnemyShot\": () => (/* binding */ EnemyShot)\n/* harmony export */ });\n/* harmony import */ var _init_variable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../init/variable */ \"./src/init/variable.ts\");\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Point */ \"./src/class/Point.ts\");\n\n\n// 敵キャラクターの弾幕の設定\nvar EnemyShot = /** @class */ (function () {\n    function EnemyShot() {\n        this.position = new _Point__WEBPACK_IMPORTED_MODULE_1__.Point();\n        this.vector = new _Point__WEBPACK_IMPORTED_MODULE_1__.Point();\n        this.size = 0;\n        this.speed = 0;\n        this.alive = false;\n    }\n    EnemyShot.prototype.EnemyShotSet = function (p, vector, size, speed) {\n        // 座標とベクトルを設定\n        this.position.x = p.x;\n        this.position.y = p.y;\n        this.vector.x = vector.x;\n        this.vector.y = vector.y;\n        // サイズとスピードを設定\n        this.size = size;\n        this.speed = speed;\n        this.alive = true;\n        // console.log(\"EnemyShot true\");\n    };\n    EnemyShot.prototype.EnemyShotMove = function () {\n        this.position.x += this.vector.x * this.speed;\n        this.position.y += this.vector.y * this.speed;\n        if (this.position.x < -this.size ||\n            this.position.y < -this.size ||\n            this.position.x > this.size + _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width ||\n            this.position.y > this.size + _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.height) {\n            this.alive = false;\n        }\n    };\n    return EnemyShot;\n}());\n\n\n\n//# sourceURL=webpack://module_shooting/./src/class/EnemyShot.ts?");

/***/ }),

/***/ "./src/class/Point.ts":
/*!****************************!*\
  !*** ./src/class/Point.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Point\": () => (/* binding */ Point)\n/* harmony export */ });\n\nvar Point = /** @class */ (function () {\n    function Point() {\n        this.x = 0;\n        this.y = 0;\n    }\n    Point.prototype.distance = function (p) {\n        var q = new Point();\n        q.x = p.x - this.x;\n        q.y = p.y - this.y;\n        return q;\n    };\n    Point.prototype.length = function () {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    };\n    Point.prototype.normalize = function () {\n        var i = this.length();\n        if (i > 0) {\n            var j = 1 / i;\n            this.x *= j;\n            this.y *= j;\n        }\n    };\n    return Point;\n}());\n\n\n\n//# sourceURL=webpack://module_shooting/./src/class/Point.ts?");

/***/ }),

/***/ "./src/functions/gameLoop.ts":
/*!***********************************!*\
  !*** ./src/functions/gameLoop.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gameLoop\": () => (/* binding */ gameLoop)\n/* harmony export */ });\n/* harmony import */ var _init_variable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../init/variable */ \"./src/init/variable.ts\");\n/* harmony import */ var _runTimer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./runTimer */ \"./src/functions/runTimer.ts\");\n\n\n// クラス\nvar gameLoop = function () {\n    var message = \"\";\n    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.counter++;\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.info) {\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.info.innerHTML = \"SCORE: \" + _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.score * 100 + \" \" + message;\n    }\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx) {\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.clearRect(0, 0, _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width, _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.height);\n        // パスの設定を開始\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.beginPath();\n    }\n    // 自機を描パスの設定\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx) {\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.arc(_init_variable__WEBPACK_IMPORTED_MODULE_0__.player.position.x, _init_variable__WEBPACK_IMPORTED_MODULE_0__.player.position.y, _init_variable__WEBPACK_IMPORTED_MODULE_0__.player.size, 0, Math.PI * 2, false);\n        // 自機の色を設定\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillStyle = _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.playerColor;\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.strokeStyle = \"black\";\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.stroke();\n        // 自機を描く\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fill();\n    }\n    // ----------------------------------------------------------------\n    // vars.fire（真偽値）により発射の分岐\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.fire) {\n        for (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.playerShotMaxCount; i++) {\n            if (!_init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].alive) {\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].CharacterShotSet(_init_variable__WEBPACK_IMPORTED_MODULE_0__.player.position, 3, 7);\n                break;\n            }\n        }\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.fire = false;\n    }\n    // ショットを描くパスを設定\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx) {\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.beginPath();\n        for (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.playerShotMaxCount; i++) {\n            if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].alive) {\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].CharacterShotMove();\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.arc(_init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].position.x, _init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].position.y, _init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].size, 0, Math.PI * 2, false);\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.closePath();\n            }\n        }\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillStyle = _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.playerShotColor;\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fill();\n    }\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.counter % 100 === 0 && _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.counter < 2800) {\n        for (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyMaxCount; i++) {\n            if (!_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i].alive) {\n                // 敵キャラのタイプを決定\n                var j = Math.floor(Math.random() * 4) + 1;\n                var sel = j % 2;\n                var enemySize = 10;\n                var sel2 = Math.floor(Math.random() * 2) + 0;\n                if (sel2) {\n                    if (sel === 0) {\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.x = -enemySize;\n                        if (j === 2) {\n                            _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.y = 0 - enemySize;\n                        }\n                        else {\n                            _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.y = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.height - enemySize;\n                        }\n                    }\n                    else {\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.x = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width + enemySize;\n                        if (j === 1) {\n                            _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.y = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.height - enemySize;\n                        }\n                        else {\n                            _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.y = 0 - enemySize;\n                        }\n                    }\n                }\n                else {\n                    if (j % 2 === 0) {\n                        j = 6;\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.x = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width + enemySize;\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.y = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.height / 2 - enemySize;\n                    }\n                    else {\n                        j = 5;\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.x = -enemySize;\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.y = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.height / 2 - enemySize;\n                    }\n                }\n                // タイプに応じて出現座標を設定\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i].EnemySet(_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p, enemySize, j);\n                // 一体出現させたのでループを終了\n                break;\n            }\n        }\n    }\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.counter === 3000) {\n        // ボスの登場\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.x = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width / 2;\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.y = -80;\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.BossSet(_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p, 50, 60);\n        // 同時にビットも登場させる\n        for (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.bossBitCount; i++) {\n            var j = 360 / _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.bossBitCount;\n            _init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[i].BitSet(_init_variable__WEBPACK_IMPORTED_MODULE_0__.boss, 15, 5, i * j);\n        }\n    }\n    // counter　の値によってシーンを分岐--------------------------------------------------------\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx) {\n        switch (true) {\n            case _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.counter < 70:\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.font = \"bold 2em Impact\";\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillText(\"READY...\", 100, 100);\n                break;\n            case _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.counter < 100:\n                //    vars.ctx.clearRect(0, 0, 100, 100);\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.font = \"bold 2em verdana\";\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillText(\"GO !!\", 100, 100);\n                break;\n            default:\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.beginPath();\n                // 全ての敵キャラクターを調査する\n                for (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyMaxCount; i++) {\n                    if (!_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.isRunning) {\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.isRunning = true;\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.startTime = Date.now();\n                        (0,_runTimer__WEBPACK_IMPORTED_MODULE_1__.runTimer)();\n                    }\n                    // 敵キャラクターの生死を判別\n                    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i].alive) {\n                        // 敵キャラクターを動かす\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i].EnemyMove();\n                        // 敵キャラクターを描くパスを設定\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.arc(_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i].position.x, _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i].position.y, _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i].size, 0, Math.PI * 2, false);\n                        // 弾幕を打つかどうかパラメータの値からチェック\n                        if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i].param % 30 === 0) {\n                            // 敵キャラクターの弾幕を調べる\n                            for (var j = 0; j < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyShotMaxCount; j++) {\n                                if (!_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[j].alive) {\n                                    var shotSpeed = Math.floor(Math.random() * (13 + 1)) + 0;\n                                    // 敵キャラクターの弾幕を新規にセットする\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p = _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i].position.distance(_init_variable__WEBPACK_IMPORTED_MODULE_0__.player.position);\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.normalize();\n                                    var rnd = Math.random() * (1 + 0.9) - 1;\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.x += rnd;\n                                    // vars.p.y -= rnd;\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[j].EnemyShotSet(_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i].position, _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p, 5, shotSpeed);\n                                    // 一個出現させたらブレーク\n                                    break;\n                                }\n                            }\n                        }\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.closePath();\n                    }\n                }\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillStyle = _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyColor;\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fill();\n                // 敵キャラクターの弾幕の描画-----------------------------------------------------------------\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.beginPath();\n                for (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyShotMaxCount; i++) {\n                    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[i].alive) {\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[i].EnemyShotMove();\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.arc(_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[i].position.x, _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[i].position.y, _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[i].size, 0, Math.PI * 2, false);\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.closePath();\n                    }\n                }\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillStyle = _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyShotColor;\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fill();\n                // ボスの描画--------------------------------------------------------\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.beginPath();\n                if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.alive) {\n                    // もしボスが出現していたら、ボスを動かす\n                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.BossMove();\n                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.arc(_init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.position.x, _init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.position.y, _init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.size, 0, Math.PI * 2, false);\n                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.closePath();\n                }\n                // ボスの色を設定\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillStyle = _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.bossColor;\n                // 描画\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fill();\n                // ビットの描画------------------------------------------------\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.beginPath();\n                for (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.bossBitCount; i++) {\n                    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[i].alive) {\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[i].BitMove();\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.arc(_init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[i].position.x, _init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[i].position.y, _init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[i].size, 0, Math.PI * 2, false);\n                        // ショットを打つかどうかパラメータからチェック\n                        if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[i].param % 30 === 0) {\n                            for (var j = 0; j < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyShotMaxCount; j++) {\n                                if (!_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[j].alive) {\n                                    var shotSpeed = Math.floor(Math.random() * (6 - 1)) + 1;\n                                    // 新規に弾幕を設定\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p = _init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[i].position.distance(_init_variable__WEBPACK_IMPORTED_MODULE_0__.player.position);\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.normalize();\n                                    // vars.p.x += 0.3;\n                                    // vars.p.y += 0.2;\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[j].EnemyShotSet(_init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[i].position, _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p, 4, shotSpeed);\n                                    break;\n                                }\n                            }\n                        }\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.closePath();\n                    }\n                }\n                // ビットの色を設定\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillStyle = _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.bossBitColor;\n                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fill();\n                // 当たり判定の設定ーーーーーーー------------------------------------\n                for (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.playerShotMaxCount; i++) {\n                    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].alive) {\n                        for (var j = 0; j < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyMaxCount; j++) {\n                            if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[j].alive) {\n                                // 敵キャラクターと自身との距離を測定\n                                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p = _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[j].position.distance(_init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].position);\n                                if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.length() - 7 < _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[j].size) {\n                                    // 当たっていたら生死フラグをfalseにする\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[j].alive = false;\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].alive = false;\n                                    // 弾幕が敵キャラクターに当たったのでスコアを増やす\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.score++;\n                                    break;\n                                }\n                            }\n                        }\n                        // 自身の弾幕とボスビットとの当たり判定\n                        for (var j = 0; j < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.bossBitCount; j++) {\n                            //   ビットの生死を確認\n                            if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[j].alive) {\n                                // 自身の弾幕とビットとの距離を計測\n                                _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p = _init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[j].position.distance(_init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].position);\n                                if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.length() < _init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[j].size) {\n                                    // 当たっていたら耐久値を減らす\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[j].life--;\n                                    // 自身の弾幕を消す\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].alive = false;\n                                    // 耐久値を削り切ったら生死フラグをfalseにする\n                                    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[j].life < 0) {\n                                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[j].alive = false;\n                                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.score += 3;\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                        // ボスの生死フラグをチェック\n                        if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.alive) {\n                            // 自身の弾幕とボスの当たり判定\n                            _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p = _init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.position.distance(_init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].position);\n                            if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.length() < _init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.size) {\n                                // 当たったら体力を減らす\n                                _init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.life--;\n                                // 自身の弾幕を消す\n                                _init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i].alive = false;\n                                // 体力が無くなったらクリア\n                                if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.boss.life < 0) {\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.score += 10;\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.run = false;\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.font = \"bold 2em verdana\";\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillStyle = \"red\";\n                                    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillText(\"CLEAR!!\", 100, 100);\n                                    clearTimeout(_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.timeOutId);\n                                    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.reset) {\n                                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.reset.classList.remove(\"playing\");\n                                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.reset.classList.add(\"reset\");\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                // 敵の弾幕の当たり判定------------------------------\n                for (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyShotMaxCount; i++) {\n                    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[i].alive) {\n                        // 自身と敵の弾幕との距離を測定\n                        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p = _init_variable__WEBPACK_IMPORTED_MODULE_0__.player.position.distance(_init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[i].position);\n                        if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.p.length() < _init_variable__WEBPACK_IMPORTED_MODULE_0__.player.size) {\n                            _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.font = \"bold 2em verdana\";\n                            _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillStyle = \"red\";\n                            _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx.fillText(\"GAME OVER\", 100, 100);\n                            clearTimeout(_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.timeOutId);\n                            _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.run = false;\n                            if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.reset) {\n                                _init_variable__WEBPACK_IMPORTED_MODULE_0__.reset.classList.remove(\"playing\");\n                                _init_variable__WEBPACK_IMPORTED_MODULE_0__.reset.classList.add(\"reset\");\n                            }\n                            break;\n                        }\n                    }\n                }\n                break;\n        }\n    }\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.info) {\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.info.innerHTML = \"SCORE　:　\" + _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.score * 100;\n    }\n    // フラグによる再帰呼出\n    var fps = 1000 / 30;\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.run)\n        setTimeout(gameLoop, fps);\n};\n\n\n\n//# sourceURL=webpack://module_shooting/./src/functions/gameLoop.ts?");

/***/ }),

/***/ "./src/functions/keyDown.ts":
/*!**********************************!*\
  !*** ./src/functions/keyDown.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"keyDown\": () => (/* binding */ keyDown)\n/* harmony export */ });\n/* harmony import */ var _init_variable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../init/variable */ \"./src/init/variable.ts\");\n\nvar keyDown = function (event) {\n    var k = event.key;\n    if (k === \"ArrowLeft\") {\n        if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.x < 7)\n            return;\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.x -= 15;\n    }\n    if (k === \"ArrowRight\") {\n        if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.x > _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width - 7)\n            return;\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.x += 15;\n    }\n    if (k === \"ArrowUp\") {\n        if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.y < 7)\n            return;\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.y -= 15;\n    }\n    if (k === \"ArrowDown\") {\n        if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.y > _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.height - 7)\n            return;\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.y += 15;\n    }\n    if (k === \"f\") {\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.fire = true;\n    }\n    // 中断\n    if (k === \"Escape\") {\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.run = false;\n    }\n    return;\n};\n\n\n\n//# sourceURL=webpack://module_shooting/./src/functions/keyDown.ts?");

/***/ }),

/***/ "./src/functions/mouseDown.ts":
/*!************************************!*\
  !*** ./src/functions/mouseDown.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mouseDown\": () => (/* binding */ mouseDown)\n/* harmony export */ });\n/* harmony import */ var _init_variable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../init/variable */ \"./src/init/variable.ts\");\n\nvar mouseDown = function () {\n    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.fire = true;\n};\n\n\n\n//# sourceURL=webpack://module_shooting/./src/functions/mouseDown.ts?");

/***/ }),

/***/ "./src/functions/mouseMove.ts":
/*!************************************!*\
  !*** ./src/functions/mouseMove.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mouseMove\": () => (/* binding */ mouseMove)\n/* harmony export */ });\n/* harmony import */ var _init_variable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../init/variable */ \"./src/init/variable.ts\");\n\nvar mouseMove = function (event) {\n    _init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.x = event.clientX - _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.offsetLeft;\n    _init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.y = event.clientY - _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.offsetTop;\n};\n\n\n\n//# sourceURL=webpack://module_shooting/./src/functions/mouseMove.ts?");

/***/ }),

/***/ "./src/functions/runTimer.ts":
/*!***********************************!*\
  !*** ./src/functions/runTimer.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"runTimer\": () => (/* binding */ runTimer)\n/* harmony export */ });\n/* harmony import */ var _init_variable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../init/variable */ \"./src/init/variable.ts\");\n\nvar runTimer = function () {\n    if (_init_variable__WEBPACK_IMPORTED_MODULE_0__.time !== null) {\n        _init_variable__WEBPACK_IMPORTED_MODULE_0__.time.textContent = ((Date.now() - _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.startTime) / 1000).toFixed(2);\n    }\n    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.timeOutId = setTimeout(function () {\n        runTimer();\n    });\n};\n\n\n\n//# sourceURL=webpack://module_shooting/./src/functions/runTimer.ts?");

/***/ }),

/***/ "./src/init/variable.ts":
/*!******************************!*\
  !*** ./src/init/variable.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reset\": () => (/* binding */ reset),\n/* harmony export */   \"time\": () => (/* binding */ time),\n/* harmony export */   \"canvas\": () => (/* binding */ canvas),\n/* harmony export */   \"info\": () => (/* binding */ info),\n/* harmony export */   \"constants\": () => (/* binding */ constants),\n/* harmony export */   \"mouse\": () => (/* binding */ mouse),\n/* harmony export */   \"player\": () => (/* binding */ player),\n/* harmony export */   \"playerShot\": () => (/* binding */ playerShot),\n/* harmony export */   \"enemy\": () => (/* binding */ enemy),\n/* harmony export */   \"enemyShot\": () => (/* binding */ enemyShot),\n/* harmony export */   \"boss\": () => (/* binding */ boss),\n/* harmony export */   \"bit\": () => (/* binding */ bit),\n/* harmony export */   \"variables\": () => (/* binding */ variables)\n/* harmony export */ });\n/* harmony import */ var _class_Boss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../class/Boss */ \"./src/class/Boss.ts\");\n/* harmony import */ var _class_Character__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../class/Character */ \"./src/class/Character.ts\");\n/* harmony import */ var _class_Point__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../class/Point */ \"./src/class/Point.ts\");\n\n\n\n// HTML要素の取得\nvar reset = document.getElementById(\"reset\");\nvar time = document.getElementById(\"time\");\nvar canvas = document.getElementById(\"canvas\");\nvar info = document.getElementById(\"info\");\n// ゲーム内の数値（定数）\nvar constants = {\n    playerShotMaxCount: 20,\n    enemyMaxCount: 1000,\n    enemyShotMaxCount: 500,\n    bossBitCount: 2,\n    // 色関係\n    playerColor: \"rgba(159, 84, 230, 0.562)\",\n    playerShotColor: \"rgba(218, 76, 11, 0.75)\",\n    enemyColor: \"rgba(206, 18, 18, 0.63)\",\n    enemyShotColor: \"rgba(14, 2, 121, 0.75)\",\n    bossColor: \"rgba(128, 128, 128, 0.75)\",\n    bossBitColor: \"rgba(64, 64, 64, 0.75)\",\n};\n// インスタンス\nvar mouse = new _class_Point__WEBPACK_IMPORTED_MODULE_2__.Point();\nvar player = new _class_Character__WEBPACK_IMPORTED_MODULE_1__.Character();\nvar playerShot = new Array(constants.playerShotMaxCount);\nvar enemy = new Array(constants.enemyMaxCount);\nvar enemyShot = new Array(constants.enemyShotMaxCount);\nvar boss = new _class_Boss__WEBPACK_IMPORTED_MODULE_0__.Boss();\nvar bit = new Array(constants.bossBitCount);\n// 変数\nvar variables = {\n    run: true,\n    fire: false,\n    startTime: 0,\n    isRunning: false,\n    timeOutId: setTimeout(function () { }, 0),\n    // キャンバスの二次元取得\n    ctx: null,\n    // 汎用座標情報インスタンス\n    p: new _class_Point__WEBPACK_IMPORTED_MODULE_2__.Point(),\n    // ゲームの進行度合いを表すカウンタ\n    counter: 0,\n    // ゲームのスコア\n    score: 0,\n};\n\n\n//# sourceURL=webpack://module_shooting/./src/init/variable.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _init_variable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./init/variable */ \"./src/init/variable.ts\");\n/* harmony import */ var _class_CharacterShot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./class/CharacterShot */ \"./src/class/CharacterShot.ts\");\n/* harmony import */ var _class_Enemy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./class/Enemy */ \"./src/class/Enemy.ts\");\n/* harmony import */ var _class_EnemyShot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./class/EnemyShot */ \"./src/class/EnemyShot.ts\");\n/* harmony import */ var _class_Bit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./class/Bit */ \"./src/class/Bit.ts\");\n/* harmony import */ var _functions_mouseMove__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./functions/mouseMove */ \"./src/functions/mouseMove.ts\");\n/* harmony import */ var _functions_mouseDown__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./functions/mouseDown */ \"./src/functions/mouseDown.ts\");\n/* harmony import */ var _functions_keyDown__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./functions/keyDown */ \"./src/functions/keyDown.ts\");\n/* harmony import */ var _functions_gameLoop__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./functions/gameLoop */ \"./src/functions/gameLoop.ts\");\n\n// 定数、変数の情報\n\n// クラス\n\n\n\n\n// 関数\n\n\n\n\n// コンテキストの取得\nif (_init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas) {\n    _init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.ctx = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.getContext(\"2d\");\n}\n_init_variable__WEBPACK_IMPORTED_MODULE_0__.variables.counter = 0;\n_init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width = 400;\n_init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.height = 400;\n// イベントの登録\n_init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.addEventListener(\"mousemove\", _functions_mouseMove__WEBPACK_IMPORTED_MODULE_5__.mouseMove, true);\n_init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.addEventListener(\"mousedown\", _functions_mouseDown__WEBPACK_IMPORTED_MODULE_6__.mouseDown, true);\ndocument.addEventListener(\"keydown\", _functions_keyDown__WEBPACK_IMPORTED_MODULE_7__.keyDown, true);\n// 自機の初期化\n_init_variable__WEBPACK_IMPORTED_MODULE_0__.player.init(14);\nfor (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.playerShotMaxCount; i++) {\n    _init_variable__WEBPACK_IMPORTED_MODULE_0__.playerShot[i] = new _class_CharacterShot__WEBPACK_IMPORTED_MODULE_1__.CharacterShot();\n}\n// 敵の初期化\nfor (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyMaxCount; i++) {\n    _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemy[i] = new _class_Enemy__WEBPACK_IMPORTED_MODULE_2__.Enemy();\n}\n// 敵キャラクターの弾幕の初期化\nfor (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.enemyShotMaxCount; i++) {\n    _init_variable__WEBPACK_IMPORTED_MODULE_0__.enemyShot[i] = new _class_EnemyShot__WEBPACK_IMPORTED_MODULE_3__.EnemyShot();\n}\n// ボスのビットを初期化\nfor (var i = 0; i < _init_variable__WEBPACK_IMPORTED_MODULE_0__.constants.bossBitCount; i++) {\n    _init_variable__WEBPACK_IMPORTED_MODULE_0__.bit[i] = new _class_Bit__WEBPACK_IMPORTED_MODULE_4__.Bit();\n}\n// 初期位置の設定\n_init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.x = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.width / 2;\n_init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.y = _init_variable__WEBPACK_IMPORTED_MODULE_0__.canvas.height - 25;\n// 自機の位置を設定--------------------------------------------------------\n_init_variable__WEBPACK_IMPORTED_MODULE_0__.player.position.x = _init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.x;\n_init_variable__WEBPACK_IMPORTED_MODULE_0__.player.position.y = _init_variable__WEBPACK_IMPORTED_MODULE_0__.mouse.y;\n(0,_functions_gameLoop__WEBPACK_IMPORTED_MODULE_8__.gameLoop)();\n\n\n//# sourceURL=webpack://module_shooting/./src/main.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;